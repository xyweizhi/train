{"version":3,"file":"component---src-pages-news-center-js-b03b0813ffaa6b0c4586.js","mappings":"wLAaA,I,kKAFQA,EAAR,SACMC,EAAW,GACRC,EAAI,EAAGA,EAAI,GAAIA,IACtBD,EAASE,KAAK,CACZC,KAAM,qBACNC,MAAM,mBAAoBH,EAC1BI,OAAQ,qCACRC,YACE,yFACFC,QACE,kMAEL,IAEKC,EAAAA,SAAAA,GACJ,WAAYC,GAAQ,IAAD,SACjB,cAAMA,IAAN,MACKC,MAAQ,CACXC,SAAU,IAGZ,EAAKC,YAAc,EAAKA,YAAYC,MAAjB,WANF,GADfL,EAAAA,EAAAA,GAAAA,EAAAA,GAQH,kBAwGA,OAxGA,EAEDM,kBAAA,WACE,IAAMC,EAAOC,KACbC,IAAAA,IAEI,sFAEDC,MAAK,SAAUC,GACdC,QAAQC,IAAIF,EAASG,KAAKA,KAAKC,UAC/BR,EAAKS,SAAS,CACZb,SAAUQ,EAASG,KAAKA,KAAKC,cAGhCE,OAAM,SAAUC,GACfN,QAAQC,IAAIK,OAEjB,EAEDC,qBAAA,aAAyB,EAEzBf,YAAA,SAAYgB,GACVR,QAAQC,IAAI,eAAiBO,EAAMxB,QACpC,EACDyB,OAAA,WACE,IAAQlB,EAAaK,KAAKN,MAAlBC,SACR,OACE,QAAC,IAAD,MACE,QAAC,IAAD,CAAKP,MAAM,UACX,oBACE,QAAC,EAAA0B,EAAD,CACEC,UAAU,oBACVC,QAAQ,OACRC,YAAY,UACZC,IAAI,kCACJC,QAAS,GACTC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,OACJjC,MAAM,OARR,uBAUA,QAAC,EAAA0B,EAAD,CACEC,UAAU,oBACVC,QAAQ,OACRC,YAAY,UACZC,IAAI,sCACJC,QAAS,GACTC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,OACJjC,MAAM,OARR,wBAWF,eAAK2B,UAAU,mBACb,cACEO,KAAM,CACJC,OAAQ,GACRC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,IAAK,GAEPC,WAAW,WACXC,KAAK,QACLC,OAAO,EACPC,WAAY,CACVC,SAAU,SAAAC,GACR/B,QAAQC,IAAI8B,IAEdC,SAAU,GAEZC,WAAY1C,EACZ2C,QAAQ,eAAKvB,UAAU,mBAAf,QAMRwB,WAAY,SAACC,EAAM5B,GAAP,OACV,mBAAW6B,IAAKD,EAAKpD,MAAO2B,UAAU,mBACpC,aACE2B,QAAS,WACPtC,QAAQC,IAAI,WAAamC,EAAKG,IAC9BC,OAAOC,SAAS1D,KAAO,cAAiBqD,EAAKG,GAAK,IAGpDG,WAAS,EAETC,OACE,eACEhC,UAAU,sBACVM,IAAI,UACJH,IAAKsB,EAAKnD,WAId,QAACN,EAAD,CAAMK,MAAOoD,EAAKQ,UAAW1D,YAAakD,EAAKlD,sBAQ9D,EAhHGE,CAAmByD,EAAAA,WAqHlB,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEeC,MAAM,2CAFrB,WAEGC,EAFH,QAGMC,GAHN,sBAIK,IAAIC,MAAJ,mBAJL,uBAOYF,EAAIG,OAPhB,6CAOD9D,MAPC,kEAUI,CACL+D,QAAS,CACPC,OAAQ,KAEVhE,MAAO,KAdN,iFAFP,a","sources":["webpack://gatsby-starter-default/./src/pages/newsCenter.js"],"sourcesContent":["import * as React from \"react\"\r\nimport { StaticImage } from \"gatsby-plugin-image\"\r\nimport { List, Card } from \"antd\"\r\nimport axios from \"axios\"\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\n\r\n// import { withRouter } from \"react-router-dom\"\r\n\r\n// import \"./news_center.scss\"\r\n\r\nconst { Meta } = Card\r\nconst listData = []\r\nfor (let i = 0; i < 23; i++) {\r\n  listData.push({\r\n    href: \"https://ant.design\",\r\n    title: `ant design part ${i}`,\r\n    avatar: \"https://joeschmoe.io/api/v1/random\",\r\n    description:\r\n      \"Ant Design, a design language for background applications, is refined by Ant UED Team.\",\r\n    content:\r\n      \"We supply a series of design principles, practical patterns and high quality design resources (Sketch and Axure), to help people create their product prototypes beautifully and efficiently.\",\r\n  })\r\n}\r\n\r\nclass newsCenter extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      newsData: [],\r\n    }\r\n\r\n    this.onItemClick = this.onItemClick.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    const that = this\r\n    axios\r\n      .get(\r\n        \"https://www.fastmock.site/mock/3a60302423a5db4ee8b58db290fdcafc/test/all_new_react\"\r\n      )\r\n      .then(function (response) {\r\n        console.log(response.data.data.userInfo)\r\n        that.setState({\r\n          newsData: response.data.data.userInfo,\r\n        })\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  componentWillUnmount() {}\r\n\r\n  onItemClick(index) {\r\n    console.log(\"onItemClick:\" + index.title)\r\n  }\r\n  render() {\r\n    const { newsData } = this.state\r\n    return (\r\n      <Layout>\r\n        <Seo title=\"新闻中心\" />\r\n        <div>\r\n          <StaticImage\r\n            className=\"d-md-block d-none\"\r\n            loading=\"lazy\"\r\n            placeholder=\"blurred\"\r\n            src=\"../assets/images/newscenter.jpg\"\r\n            quality={95}\r\n            formats={[\"AUTO\", \"WEBP\", \"AVIF\"]}\r\n            alt=\"新闻中心\"\r\n            title=\"新闻中心\"\r\n          />\r\n          <StaticImage\r\n            className=\"d-md-none d-block\"\r\n            loading=\"lazy\"\r\n            placeholder=\"blurred\"\r\n            src=\"../assets/images/ydd-newscenter.jpg\"\r\n            quality={95}\r\n            formats={[\"AUTO\", \"WEBP\", \"AVIF\"]}\r\n            alt=\"新闻中心\"\r\n            title=\"新闻中心\"\r\n          />\r\n        </div>\r\n        <div className=\"news container\">\r\n          <List\r\n            grid={{\r\n              gutter: 16,\r\n              xs: 1,\r\n              sm: 2,\r\n              md: 4,\r\n              lg: 4,\r\n              xl: 4,\r\n              xxl: 4,\r\n            }}\r\n            itemLayout=\"vertical\"\r\n            size=\"large\"\r\n            split={false}\r\n            pagination={{\r\n              onChange: page => {\r\n                console.log(page)\r\n              },\r\n              pageSize: 8,\r\n            }}\r\n            dataSource={newsData}\r\n            header={<div className=\"news__newsTitle\">新闻中心</div>}\r\n            //   footer={\r\n            //     <div>\r\n            //       <b>ant design</b> footer part\r\n            //     </div>\r\n            //   }\r\n            renderItem={(item, index) => (\r\n              <List.Item key={item.title} className=\"news__listItem\">\r\n                <Card\r\n                  onClick={() => {\r\n                    console.log(\"onClick:\" + item.id)\r\n                    window.location.href = \"/detail?id=\" + (item.id % 10)\r\n                    // that.onItemClick(index)\r\n                  }}\r\n                  hoverable\r\n                  // style={{ width: 300 }}\r\n                  cover={\r\n                    <img\r\n                      className=\"news__listItemImage\"\r\n                      alt=\"example\"\r\n                      src={item.avatar}\r\n                    />\r\n                  }\r\n                >\r\n                  <Meta title={item.showTitle} description={item.description} />\r\n                </Card>\r\n              </List.Item>\r\n            )}\r\n          />\r\n        </div>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default newsCenter\r\n\r\nexport async function getServerData() {\r\n  try {\r\n    const res = await fetch(`https://dog.ceo/api/breeds/image/random`)\r\n    if (!res.ok) {\r\n      throw new Error(`Response failed`)\r\n    }\r\n    return {\r\n      props: await res.json(),\r\n    }\r\n  } catch (error) {\r\n    return {\r\n      headers: {\r\n        status: 500,\r\n      },\r\n      props: {},\r\n    }\r\n  }\r\n}\r\n"],"names":["Meta","listData","i","push","href","title","avatar","description","content","newsCenter","props","state","newsData","onItemClick","bind","componentDidMount","that","this","axios","then","response","console","log","data","userInfo","setState","catch","error","componentWillUnmount","index","render","S","className","loading","placeholder","src","quality","formats","alt","grid","gutter","xs","sm","md","lg","xl","xxl","itemLayout","size","split","pagination","onChange","page","pageSize","dataSource","header","renderItem","item","key","onClick","id","window","location","hoverable","cover","showTitle","React","getServerData","fetch","res","ok","Error","json","headers","status"],"sourceRoot":""}